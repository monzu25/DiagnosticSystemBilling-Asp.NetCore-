//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC_CityLab
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CityLabDBEntities : DbContext
    {
        public CityLabDBEntities()
            : base("name=CityLabDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CashReceiveDetails> CashReceiveDetails { get; set; }
        public virtual DbSet<CashReceiveMaster> CashReceiveMaster { get; set; }
        public virtual DbSet<Doctors> Doctors { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<InvestigationDetails> InvestigationDetails { get; set; }
        public virtual DbSet<InvestigationMaster> InvestigationMaster { get; set; }
        public virtual DbSet<Investigations> Investigations { get; set; }
        public virtual DbSet<LoginUser> LoginUser { get; set; }
        public virtual DbSet<ReportSetup> ReportSetup { get; set; }
    
        public virtual ObjectResult<string> RegisterUser(string firstName, string lastName, string userID, string userPassword)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("RegisterUser", firstNameParameter, lastNameParameter, userIDParameter, userPasswordParameter);
        }
    
        public virtual ObjectResult<string> spValidateUserLogin(string loginID, string loginPassword)
        {
            var loginIDParameter = loginID != null ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(string));
    
            var loginPasswordParameter = loginPassword != null ?
                new ObjectParameter("LoginPassword", loginPassword) :
                new ObjectParameter("LoginPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spValidateUserLogin", loginIDParameter, loginPasswordParameter);
        }
    }
}
